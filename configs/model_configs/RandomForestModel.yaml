name: "RandomForest"
pretrained_model_paths: null #"/cluster/project/bmds_lab/sepsis_sophia/pulse/output/output_to_keep/20250509_183704_RandomForest_preprocessing_unstandardized_6dw_0pw_1sz/Models" # Path to pretrained model (if any)
params:
  # Basic configuration
  type: "convML" # Type of model (convML for conventional machine learning, convDL for conventional deep learning and LLM for large language models)
  trainer_name: "RandomForestTrainer" # Class that implements the training process
  mode: "train" # Mode of operation (train, inference)
  verbose: 1 # Controls verbosity of output (0: silent, 1: progress bar, >1: more details)
  tune_hyperparameters: false # Whether to tune hyperparameters (true/false)
  n_jobs: -1 # Number of CPU cores to use (-1 for all available, None for 1 CPU)

  # Model Structure
  n_estimators: 100 # Number of trees in the forest
  max_depth: null # Maximum depth of trees (null for unlimited)
  max_features: "sqrt" # Number of features to consider (options: "sqrt", "log2", int, float)
  max_leaf_nodes: null # Max leaf nodes (null for unlimited)

  # Split Criteria
  min_samples_split: 2 # Minimum samples required to split internal node
  min_samples_leaf: 1 # Minimum samples required at a leaf node
  criterion: "gini" # Function to measure split quality ("gini" or "entropy")
  min_impurity_decrease: 0.0 # Minimum impurity decrease required for splitting

  # Sampling parameters
  bootstrap: true # Whether to use bootstrap samples for building trees
  oob_score: false # Whether to use out-of-bag samples to estimate generalization accuracy
  max_samples: null # Number of samples to draw if bootstrap=True (null for same as input)

  # Regularization parameters
  class_weight: null # Weights for classes (null, "balanced", "balanced_subsample", or dict)
  ccp_alpha: 0.0 # Complexity parameter for Minimal Cost-Complexity Pruning
